pipeline {
  agent any

  options {
    ansiColor('xterm')
  }

  parameters {
    string(name: 'ENV', defaultValue: '', description: 'Which Environment?')
    string(name: 'APP_VERSION', defaultValue: '', description: 'Which Version of APP?')
    string(name: 'COMPONENT', defaultValue: '', description: 'Which APP Component?')
  }

  stages {

    stage('Labeling Build') {
      steps {
        script {
          addShortText background: 'yellow', color: 'black', borderColor: 'yellow', text: "ENV = ${ENV}"
          addShortText background: 'yellow', color: 'black', borderColor: 'yellow', text: "APP_VERSION = ${APP_VERSION}"
          addShortText background: 'yellow', color: 'black', borderColor: 'yellow', text: "COMPONENT = ${COMPONENT}"
        }
      }
    }

    stage('Check ECR image') {
      steps {
        sh '''
          aws ecr list-images --repository-name ${COMPONENT} | jq ".imageIds[].imageTag" | grep ${APP_VERSION}
        '''
      }
    }

    stage('App Deployment') {
      steps {
        dir('app') {
          git branch: 'main', url: "https://github.com/venuk-1502/${COMPONENT}.git"
        }
        dir('helm') {
          git branch: 'main', url: "https://github.com/venuk-1502/devops.git"
        }
        dir('helm') {
          sh '''
            ls -l .
            ls -l ..
            ls -l ../app/helm
            //cd kubernetes
            //helm upgrade -i ${COMPONENT}-${ENV} roboshop -f ../app/helm/${ENV}-values.yml --set image.tag=${APP_VERSION} --wait --timeout 1m
          '''
        }
      }
    }

  }

}